import{j as d}from"./jsx-runtime-B-vjrZM9.js";import{r as o}from"./iframe-NSoKY1mh.js";const u=o.createContext(void 0),c={gp:{id:"gp-001",name:"Dr. van der Berg",role:"gp",practice:"Huisartsenpraktijk Rotterdam Centrum"},"poh-s":{id:"poh-s-001",name:"Martine van der Berg (POH-S)",role:"poh-s",practice:"Huisartsenpraktijk Rotterdam Centrum"},"practice-manager":{id:"pm-001",name:"Sarah de Jong (Practice Manager)",role:"practice-manager",practice:"Huisartsenpraktijk Rotterdam Centrum"}};function l({children:r}){const[e,t]=o.useState(c["poh-s"]),s={user:e,setUser:t,changeRole:n=>{t(c[n])}};return d.jsx(u.Provider,{value:s,children:r})}function m(){const r=o.useContext(u);if(r===void 0)throw new Error("useUser must be used within a UserProvider");return r}function f(r){switch(r){case"gp":return"Huisarts";case"poh-s":return"POH-S";case"practice-manager":return"Praktijkmanager";default:return r}}function A(r){switch(r){case"gp":return{canApproveMassActions:!0,canConfigureThresholds:!1,canViewAuditDetails:!0,canManageGovernance:!1,focusArea:"approval"};case"poh-s":return{canApproveMassActions:!0,canConfigureThresholds:!0,canViewAuditDetails:!0,canManageGovernance:!1,focusArea:"daily-operations"};case"practice-manager":return{canApproveMassActions:!1,canConfigureThresholds:!1,canViewAuditDetails:!0,canManageGovernance:!0,focusArea:"oversight"};default:return{canApproveMassActions:!1,canConfigureThresholds:!1,canViewAuditDetails:!1,canManageGovernance:!1,focusArea:"restricted"}}}l.__docgenInfo={description:"",methods:[],displayName:"UserProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};const i="care-engine-audit-log";class g{static generateId(){return`A${Date.now()}-${Math.random().toString(36).substr(2,9)}`}static getCurrentUser(){return"Martine van der Berg (POH-S)"}static addEntry(e,t){const a={id:this.generateId(),timestamp:new Date().toISOString(),user:this.getCurrentUser(),actionType:e,details:t};try{const s=this.getAllEntries(),n=[a,...s];return sessionStorage.setItem(i,JSON.stringify(n)),a}catch(s){return console.error("Failed to add audit entry:",s),a}}static getAllEntries(){try{const e=sessionStorage.getItem(i);return e?JSON.parse(e):[]}catch(e){return console.error("Failed to retrieve audit entries:",e),[]}}static clearEntries(){try{sessionStorage.removeItem(i)}catch(e){console.error("Failed to clear audit entries:",e)}}static getEntriesByType(e){return this.getAllEntries().filter(t=>t.actionType===e)}static getEntriesByUser(e){return this.getAllEntries().filter(t=>t.user===e)}}function v(r,e){g.addEntry(r,e)}export{l as U,A as a,f as g,v as l,m as u};
